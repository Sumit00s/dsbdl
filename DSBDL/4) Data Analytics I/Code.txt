4) Data Analytics I
Create a Linear Regression Model using Python/R to predict home prices using Boston
Housing Dataset (https://www.kaggle.com/c/boston-housing). The Boston Housing dataset
contains information about various houses in Boston through different parameters. There
are 506 samples and 14 feature variables in this dataset.



import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.datasets import fetch_openml
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error,r2_score
from sklearn.preprocessing import StandardScaler


data=fetch_openml(name='boston', as_frame=True)
df=data.frame

if 'MEDV' in df.columns:
    df.rename(columns={'MEDV':'medv'},inplace=True)

x=df.drop(columns=['medv'])
y=df['medv']

scaler=StandardScaler()
x_scaled=scaler.fit_transform(x)

x_train,x_test,y_train,y_test=train_test_split(x_scaled,y,test_size=0.2,random_state=42)

model=LinearRegression()
model.fit(x_train,y_train)

y_pred=model.predict(x_test)

mae=mean_absolute_error(y_test,y_pred)
mse=mean_squared_error(y_test,y_pred)
rmse=np.sqrt(mse)
r2=r2_score(y_test,y_pred)

print(f'mae: {mae}')
print(f'mse: {mse}')
print(f'rmse: {rmse}')
print(f'r2 score: {r2}')


plt.scatter(y_test,y_test,color='blue',alpha=0.7,label='actual price')
plt.scatter(y_test,y_pred,color='red',alpha=0.7,label='predicted price')
plt.xlabel('actual prices')
plt.ylabel('predicted prices')
plt.title('actual vs predicted prices')
plt.legend()
plt.show()